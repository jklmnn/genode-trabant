# netcup test

set build_components {
    core init
    timer
    drivers/vga_log
    drivers/usb
    drivers/ahci
    drivers/nic
    app/log_core
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

set config {
<config prio_levels="2" verbose="yes">
    <parent-provides>
        <service name="ROM"/>
        <service name="IRQ"/>
        <service name="IO_MEM"/>
        <service name="IO_PORT"/>
        <service name="PD"/>
        <service name="RM"/>
        <service name="CPU"/>
        <service name="LOG"/>
    </parent-provides>
    <default-route>
        <any-service> <parent/> <any-child/> </any-service>
    </default-route>
    <default caps="1000"/>

    <start name="timer">
        <resource name="RAM" quantum="1M"/>
        <provides> <service name="Timer"/> </provides>
    </start>

    <start name="vga_log_drv">
        <resource name="RAM" quantum="4M"/>
        <provides>
            <service name="LOG"/>
        </provides>
    </start>

    <start name="log_core">
        <resource name="RAM" quantum="16M"/>
        <config period_ms="2000"/>
        <route>
            <service name="ROM" unscoped_label="log_core"><parent/></service>
            <service name="ROM" unscoped_label="ls.lib.so"><parent/></service>
            <service name="ROM" label="log"><parent label="core_log"/></service>
            <service name="LOG" label="log"><child name="vga_log_drv"/></service>
            <any-service><parent/><any-child/></any-service>
        </route>
    </start>

    <start name="usb_drv">
        <resource name="RAM" quantum="16M"/>
        <!--
        <provides>
            <service name="Input"/>
        </provides>
        -->
        <config bios_handoff="yes" uhci="yes" ohci="yes" ehci="yes" xhci="yes">
            <hid/>
        </config>
    </start>

    <start name="ahci_drv">
        <resource name="RAM" quantum="16M"/>
        <provides>
            <service name="Block"/>
        </provides>
        <config>
            <report ports="yes"/>
        </config>
    </start>

    <start name="nic_drv">
        <binary name="ipxe_nic_drv"/>
        <resource name="RAM" quantum="8M"/>
        <provides>
            <service name="Nic"/>
        </provides>
    </start>

}

append_platform_drv_config

append config {
</config>
}

install_config $config

set boot_modules {
    core ld.lib.so init
    timer
    spark.lib.so
    vga_log_drv
    usb_drv
    ahci_drv
    ipxe_nic_drv
    log_core
}

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -net nic,model=e1000 -net user -m 2G -usb -device usb-kbd"

run_genode_until forever
