# netcup test

set build_components {
    core init
    drivers/timer
    drivers/framebuffer/vesa drivers/input/dummy
    server/terminal server/terminal_log
    server/nitpicker server/nit_fb app/pointer
    test/log
    test/framebuffer
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

set config {
<config prio_levels="2" verbose="yes">
    <parent-provides>
        <service name="ROM"/>
        <service name="IRQ"/>
        <service name="IO_MEM"/>
        <service name="IO_PORT"/>
        <service name="PD"/>
        <service name="RM"/>
        <service name="CPU"/>
        <service name="LOG"/>
    </parent-provides>
    <default-route>
        <any-service> <parent/> <any-child/> </any-service>
    </default-route>
    <default caps="100"/>

    <start name="timer">
        <resource name="RAM" quantum="1M"/>
        <provides> <service name="Timer"/> </provides>
    </start>

    <start name="fb_drv" caps="200">
        <resource name="RAM" quantum="16M"/>
        <provides>
            <service name="Framebuffer"/>
        </provides>
    </start>
    
    <start name="dummy_input_drv">
        <resource name="RAM" quantum="2M"/>
        <provides>
            <service name="Input"/>
        </provides>
    </start>

    <start name="terminal">
        <resource name="RAM" quantum="16M"/>
        <provides>
            <service name="Terminal"/>
        </provides>
        <config>
            <font size="12"/>
        </config>
        <route>
            <service name="Framebuffer"><child name="nit_fb"/></service>
            <service name="Input"><child name="dummy_input_drv"/></service>
            <any-service> <parent/> <any-child/> </any-service>
        </route>
    </start>

    <start name="terminal_log">
        <resource name="RAM" quantum="8M"/>
        <provides>
            <service name="LOG"/>
        </provides>
    </start>

    <start name="test-log">
        <resource name="RAM" quantum="12M"/>
        <route>
            <service name="LOG"><child name="terminal_log"/></service>
            <any-service><parent/><any-child/></any-service>
        </route>
    </start>

    <start name="nitpicker">
        <resource name="RAM" quantum="16M"/>
        <provides><service name="Nitpicker"/></provides>
        <config>
            <domain name="pointer" layer="1" content="client" label="no" origin="pointer" />
            <domain name="default" layer="2" content="client" label="no" focus="click" hover="always" />
            <policy label="pointer" domain="pointer"/>
            <default-policy domain="default"/>
        </config>
        <route>
            <service name="Framebuffer"><child name="fb_drv"/></service>
            <service name="Input"><child name="dummy_input_drv"/></service>
            <any-service> <parent/> <any-child/> </any-service>
        </route>
    </start>

    <start name="pointer">
        <resource name="RAM" quantum="1M"/>
        <route>
            <service name="PD"><parent/></service>
            <service name="CPU"><parent/></service>
            <service name="LOG"><parent/></service>
            <service name="ROM"><parent/></service>
            <service name="Nitpicker"> <child name="nitpicker"/> </service>
        </route>
    </start>
    
    <start name="nit_fb">
        <resource name="RAM" quantum="16M"/>
        <provides>
            <service name="Framebuffer"/>
            <service name="Input"/>
        </provides>
        <config xpos="0" ypos="0" width="360" height="240" refresh_rate="25"/>
    </start>


    <!--
    <start name="test-framebuffer">
        <resource name="RAM" quantum="16M"/>
    </start>
    -->
}

append_platform_drv_config

append config {
</config>
}

install_config $config

set boot_modules {
    core ld.lib.so init
    timer
    fb_drv dummy_input_drv
    terminal terminal_log
    test-log
    test-framebuffer
    nitpicker pointer nit_fb 
}

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -net nic,model=e1000 -net user"

run_genode_until forever
